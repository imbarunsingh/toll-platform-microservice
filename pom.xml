<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tollplatform</groupId>
	<artifactId>toll-platform</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>toll-platform/parent</name>
	<description>Microservices based Toll Platform</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<scm>
		<url>https://github.com/imbarunsingh/toll-system-microservice.git</url>
		<connection>scm:git:git://github.com/imbarunsingh/toll-system-microservice.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/imbarunsingh/toll-system-microservice.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<modules>
		<module>config-service</module>
		<module>discovery-service</module>
		<module>edge-service</module>
		<module>toll-rate-service</module>
		<module>fast-pass-service</module>
		<module>toll-platform-web</module>
		<module>hystrix-dashboard-service</module>
		<module>hystrix-turbine-service</module>		
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.SR2</spring-cloud.version>
		<cloud-starter-hystrix.version>1.4.4.RELEASE</cloud-starter-hystrix.version>
		<cloud-starter-zuul.version>1.4.4.RELEASE</cloud-starter-zuul.version>
		<cloud-starter-openfeign.version>2.0.2.RELEASE</cloud-starter-openfeign.version>
		<docker.image.prefix>bsingh10</docker.image.prefix>
		<docker.plugin.version>1.2.0</docker.plugin.version>		
	</properties>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Dependency to enable live reload of spring boot app -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<!-- Dependency to enable actuator endpoints on the service -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Spring Cloud Bus dependency for auto refresh of config from cloud 
			config server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
		</dependency>
		<!-- Dependency for distributed log tracing -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<imageTags>
						<imageTag>${project.version}</imageTag>
					</imageTags>
					<dockerDirectory>${project.basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		
		<finalName>${project.artifactId}</finalName>
	</build>

</project>